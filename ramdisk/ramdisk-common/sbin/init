#!/sbin/busybox sh

cd /

mount -t proc proc /proc
mount -t sysfs sys /sys

mkdir -p /dev/block

for i in 0 1 2; do
	block=$((19+$i))
	minor=$((11+$i))
	mknod /dev/block/mmcblk0p$block b 259 $minor
done

mknod /dev/block/loop0 b 7 0

mount -t ext4 /dev/block/mmcblk0p21 /data

out() {
	umount -f /system
	umount -f /data

	chmod 755 /init
	chmod 644 /*.universal5410
	chmod 644 /*.rc
	chmod 644 /*.prop
	chmod -R 755 /lib

	exec /init
}

if grep -q bootmode=2 /proc/cmdline || [ -e /data/media/rebootrs ]; then
	rm -f /data/media/rebootrs
	mv -f /res/etc /
	mv -f /res/cm11/* /
	mv -f /res/recovery/* /
	out
fi

[ -e /data/media/.rom ] || echo 1 > /data/media/.rom
ROM=`cat /data/media/.rom`
[ $ROM == 0 ] && ROM=1

if [ "$ROM" == "1" ]; then
	mount -t ext4 -o rw /dev/block/mmcblk0p20 /system
else
	mount --bind /data/media/.${ROM}rom/system /system
fi

[ -e /system/build.prop ] || ROM=0

if [ -f /system/framework/allshare.jar ]; then
	echo "0 0" > /proc/sys/kernel/runtime_dependency
	prepareKnox

	insmod /lib/modules/dhd.ko
	mv -f /res/sec442/* /
        rm -rf /res/cm11
        rm -rf /res/sec442
        rm -rf /res/etc

else
	rm -f /sbin/cbd

	mv -f /res/libexynoscamera.so /system/lib

	echo "2 0" > /proc/sys/kernel/runtime_dependency
	insmod /lib/modules/dhd.ko
        cp -f /lib/modules/dhd.ko /system/lib/modules/dhd.ko
	mv -f /res/cm11/* /
        rm -rf /res/sec442
#       rm -rf /res/cm11

fi

out
